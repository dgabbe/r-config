# The Rprofile.site file
#
# The .Rprofile file is the file users should create/edit for their own
# preferences.
#

# ===========================================================
#
#     REMINDER: This code is sourced into the base environment.
#     Be sure not to overwrite any R funtions, etc.
#
# ===========================================================

# Notes:
#   After using the 'defaultPackage' option for a year, I recommend not using
#   this option to load the libraries you commonly use.  A vanilla R startup includes
#   these packages "datasets", "utils", "grDevices", "graphics", "stats", and "methods".
#   These need to be included if you add some of your own.  The idiom defaultPackages =
#   c(getOption("defaultPackages"), "your package") assumes the code is only
#   executed once which is not guaranteed.  RStudio executing the devtools functions cause
#   the R session initialization code to run.  "your package" is appended again to the
#   default package list and callbacks are added again to the task callback manager.
#
#   Use require() instead of library() because initialization code should never
#   fail due to personal preference.
#
#   Constantly loading devtools. Decided to make them available for interactive work.
#   dgutil contains ggplot themes so always attach if package was installed.
#
# References: http://yihui.name/en/2014/07/library-vs-require/
#
.First <- function() {
  if (interactive())
  {
    cat(format(Sys.Date(), format = "%d-%b-%Y"),
        Sys.getenv("R_PROFILE"), ".First() starting...\n\n"
    )
  }
  #
  # General options
  #
  options(
    tab.width = 2,
    digits = 4,
    papersize = "letter",
    stringsAsFactors = FALSE, # Correct for now, wonder if/when it will bite me.
    repos = c(CRAN = "https://cran.rstudio.com/"), # Specify HTTPS connection!
    formatR.indent = 2,
    browserNLdisabled = TRUE # ignore newlines when browse()ing - Hadley tip
    ##  deparse.max.lines = 2 # give minimal output from traceback() - Hadley tip
  )

  #
  # R and RStudio can have different settings for CRAN https connections.
  # Explicitly set to HTTPS.
  #
  # References: https://support.rstudio.com/hc/en-us/articles/206827897-Secure-Package-Downloads-for-R
  #
  if (.Platform$OS.type == "unix") { options(download.file.method = "libcurl")
  } else { options(download.file.method = "wininet") }

  # R's completion generator
  utils::rc.settings(
    ipck = TRUE,   # Enable tab completion for library() & require()
    help = TRUE,   # Enable tab completion for ?help
    data = TRUE    # Enable tab completion for data sets inside utils::data()
  )

  #
  # Load commonly used packages
  #
  if (interactive()) {
    suppressMessages(require("devtools", quietly = TRUE))
  }
  suppressMessages(require("dgutil", quietly = TRUE))

  # Set wdprompt.enabled = FALSE if you want to turn off the prompt.
  if ( length(find.package("wdprompt", quiet = TRUE)) != 0 ) {
    require("wdprompt", quietly = TRUE)
    wdprompt::init_wd()
    wdprompt::start_wd()
#    wdprompt::wd_prompt()
  }

  #
  # Options summary
  #
  if (interactive()) {
    cat("    Option StringsAsFactors:  ", getOption("stringsAsFactors"), "\n", sep = "")
    cat("    Option download.file.method:  ", getOption("download.file.method"), "\n", sep = "")
    cat("    Option repos:  ", getOption("repos"), "\n", sep = "")
    cat(
      strwrap(
        toString(getOption("defaultPackages")),
        width = 80,
        initial = "    Option defaultPackages:  ",
        prefix = "",
        indent = 0,
        exdent = nchar("        ")
      ),
      sep = "\n"
    )

    cat("\n    Option devtools.name:  ", getOption("devtools.name"), "\n", sep = "")
    cat("    Option devtools.desc.author:  ", getOption("devtools.desc.author"), "\n", sep = "")
    cat("    Option devtools.desc.license:  ", getOption("devtools.desc.license"), "\n", sep = "")
    cat("    Option devtools.desc:  ", getOption("devtools.desc"), "\n", sep = "")

    cat("\n", format(Sys.Date(), format = "%d-%b-%Y"), " ",
        Sys.getenv("R_PROFILE"), " .First() finished...\n\n",
        sep = ""
    )
  }
}


